# 题目标题：文本左右对齐

## 题目链接：https://leetcode-cn.com/problems/text-justification/


## 题解：

给定每一行的最大长度maxWidth，排版单词，使其每一行恰好有maxWidth个字符。单词之间要有一个空格。多余的字符用空格填补，空格放在单词之间，如果不能均匀分配要左边大于右边。每一行放入尽可能多的单词

这道题就充分体现出考虑算法和实际实现代码的差别。仅仅考虑算法，本题没有很特别的算法，重点就是代码的实现。

所以这里尝试用基本语句描述如何实现：

使用贪心来使得每一行尽可能多地放置单词，我们使用一个数组来记录单词的长度和空格，并在每一行之间插入一个标识符例如￥等来说明换行。

由于每行的单词数目决定了多余字符分配空格的方式，所以我们还需要一个计数器用于记录填入的单词数。还有一个计数器用于记录本行的剩余长度。

具体实现：

每行第一个单词一定可以读入，记录单词索引（指针）；

往后读一个单词，比较单词长度+1与剩余长度的关系，若小于，则可以插入，插入一个空格（数组中用1表示1个空格），再插入那个单词的索引。如果大于，则不能插入，这时就要考虑本行已经插入了几个单词：

	如果计数器说只有一个，那么后面都是空格，插入剩余字符的个数，再插入￥；

	如果计数器说有多个，那么就要在个数-1个可以存放空格的地方进行剩余字符的分配。由于我们知道单词数，也可以直接找到每个空格的位置。考虑如果能整除，则均匀分配。如果不能整除，例如5个字符3个空格，先分配可以整除的部分，这里就是每个1个，剩余的从左到右各自分配一个，就是第一个和第二个各自分配一个。再在最后插入￥。

如果检测到是最后一个单词，那么多余的空格都插入在右边。

最后按照这个数组进行输出。