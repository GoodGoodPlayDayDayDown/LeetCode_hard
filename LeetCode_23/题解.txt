题目名称：合并K个排序链表
题目链接：https://leetcode-cn.com/problems/merge-k-sorted-lists/

题解：
	我们要合并K个排序好的链表，问题在于，我们怎么合并？
	从简单问题出发，我们知道什么？我们知道如果如何合并两个排序好的链表，通过的方式是线性扫描一遍。那么如何推广到更多？3个怎么做？K个怎么做？这里就有一个决断，如何合并？
	第一种选择，一次合并两个，当然我们可能一开始倾向于有一条主链，然后别的往上合并。这是插入排序给我们的经验，它每次只能减小一个，我们需要K次合并。但是同样有好得多的归并排序给我们的经验，是将其分为两半，两两合并，每次合并，总数减半，实现对数型合并次数。具体每一次的工作量呢？我们考虑后面的方法，第一次为N，第二次为2N，然后指数增加。这个总体的复杂度并不很好计算。
	第二种选择，一次性合并K个，但是我们也只能一个一个输出。没输出一个最小的，那条链的下一个就要加进来进行比较。这样一来，这种我们只需要K个数据最小值，同时保持输出一个，输入一个，很容易想到堆结构，每次都需要logK的时间进行输入输出，然后我们大约总共需要KN次操作，这个算法的复杂度就很容易得到为KNlogK。
	这里再强调一次，就是，第一，不要套算法；第二，从简单问题出发。同时，两种解法的复杂度应当相近，在归并中分治，或者在排序中分治，同样导致K的对数。这可以认为是它本身结构所导致。