题目名称：最长有效括号
题目链接：https://leetcode-cn.com/problems/longest-valid-parentheses/

题解：
	本题的题目要求找到最长的包含有效括号的子串的长度。这个题目有点难度懂，结合里面提供的题解，有效括号指的是诸如（）样子，括号之前的关系为包含（（））或者并列（）（），实际上就是与我们常见的HTML规范什么的相同，我们需要找的子串是其中的元素均为有效括号，寻找其最大值。其实提到这里，第一反应应当就是栈的使用。
	具体栈的实现如下：
	我们需要是整个左右括号匹配，所以左括号进行压栈，右括号进行弹栈。每进行一次弹栈，就使length+2。如果栈中没有元素，弹栈指令无效，并且使得当前length与最大值进行比较，并将当前length清零。还有要注意全部遍历后的length也要进行比较更新。
	时间复杂度和空间复杂度均为一次遍历的线性。
	但是，有一个问题，HTML规范等是有多个需要进行匹配的指标，而这里只有一个：左右括号进行匹配。所以我们根本不需要一个栈去存储左括号，我们只需要一个计数器，栈中元素个数就是计数器的值，这样一来可以省下空间。
	在官方题解中，使用栈，使用指标差直接计算长度。同时使用计数器时，也是仅仅在左右括号相同时进行更新，所以需要从头到尾，再从尾到头，进行两次遍历。本人认为格外使用一个length的空间更好一些。
	此处的TAKE HOME MESSAGE：
	一种元素的匹配可以使用计数器，30题也用到计数器，这说明很多时候计数器很有效，在我们不考虑顺序和具体内容时。